
import streamlit as st
import pickle
import faiss
from sentence_transformers import SentenceTransformer
from langchain.vectorstores import FAISS
from langchain.embeddings import HuggingFaceEmbeddings
import google.generativeai as genai
import json

# === CARGAR ART√çCULOS COMPLETOS DESDE JSON ===
with open("ecuadorian_constitution_articles_multilabel.json", "r", encoding="utf-8") as f:
    full_articles = json.load(f)

# === STREAMLIT UI SETUP ===
st.set_page_config(page_title="Asistente Legal Ecuador", layout="centered")
st.title("üß† Asistente Legal Constitucional üá™üá®")

# === USER INPUT FOR API KEY ===
user_api_key = st.text_input("üîê Ingresa tu clave API de Gemini:", type="password")

if user_api_key:
    try:
        # Configurar Gemini con clave del usuario
        genai.configure(api_key=user_api_key)
        model = genai.GenerativeModel("models/gemini-1.5-flash", generation_config={"temperature": 0.9})

        # Cargar embeddings y vectorstore
        embedding_model = HuggingFaceEmbeddings(model_name="intfloat/multilingual-e5-base")
        vectorstore = FAISS.load_local(
            "constitution_vectorstore",
            embedding_model,
            allow_dangerous_deserialization=True
        )
        retriever = vectorstore.as_retriever(search_kwargs={"k": 3})

        # === FUNCIONES AUXILIARES ===
        def search_constitution(query, domain_filter=None):
            docs = retriever.get_relevant_documents(query)
            if domain_filter and domain_filter != "Todos":
                docs = [doc for doc in docs if domain_filter in doc.metadata.get("domains", [])]
            return docs

        def ask_constitution(query, domain_filter=None, reading_level="Intermedio (estilo ciudadano)"):
            relevant_docs = search_constitution(query, domain_filter)

            if not relevant_docs:
                return (
                    "No se encontr√≥ informaci√≥n constitucional relevante para responder esta pregunta de forma precisa.",
                    []
                )

            context = "\n\n".join([
                f"Art√≠culo: {doc.metadata.get('article_number', 'N/A')}\nDominio: {', '.join(doc.metadata.get('domains', []))}\nContenido: {doc.page_content}"
                for doc in relevant_docs
            ])

            if len(context.strip()) < 100:
                return (
                    "La informaci√≥n encontrada no es suficiente para dar una respuesta legalmente precisa. Por favor intenta reformular tu pregunta.",
                    relevant_docs
                )

            tone_instruction = {
                "B√°sico (lenguaje sencillo)": "Responde como si hablaras con un estudiante de colegio o secundaria. Usa palabras simples, sin tecnicismos.",
                "Intermedio (estilo ciudadano)": "Responde como si explicaras a un ciudadano com√∫n. S√© claro, directo y evita jerga legal innecesaria.",
                "Avanzado (t√©cnico jur√≠dico)": "Responde con precisi√≥n jur√≠dica, usando t√©rminos legales adecuados como si fueras un abogado hablando con otro abogado."
            }

            prompt = f"""
Eres un asistente legal entrenado en la Constituci√≥n del Ecuador.

{tone_instruction[reading_level]}

Ejemplos:

PREGUNTA: ¬øQu√© derechos tienen los ni√±os en Ecuador?
RESPUESTA:
Seg√∫n el Art√≠culo 45 de la Constituci√≥n del Ecuador, los ni√±os, ni√±as y adolescentes tienen derecho a la integridad f√≠sica y ps√≠quica; a su identidad, nombre y ciudadan√≠a; a la salud integral y nutrici√≥n; a la educaci√≥n y cultura, al deporte y recreaci√≥n; a la seguridad social; a tener una familia y disfrutar de la convivencia familiar y comunitaria; a la participaci√≥n social; al respeto de su libertad y dignidad; y a ser consultados en los asuntos que les conciernen.

PREGUNTA: ¬øPuedo ser detenido sin orden judicial en Ecuador?
RESPUESTA:
El Art√≠culo 77 establece que ninguna persona puede ser privada de libertad sino por orden de juez competente, excepto en caso de flagrancia. Toda persona detenida debe ser informada inmediatamente de sus derechos y de los motivos de su detenci√≥n, y tiene derecho a comunicarse con su familia y abogado.

PREGUNTA: ¬øQu√© derechos tienen los pueblos ind√≠genas sobre sus territorios?
RESPUESTA:
El Art√≠culo 57 reconoce que los pueblos ind√≠genas tienen derecho a conservar la posesi√≥n ancestral de sus tierras y territorios, a no ser desplazados, y a participar en el uso, usufructo, administraci√≥n y conservaci√≥n de los recursos naturales renovables existentes en ellos. Adem√°s, deben ser consultados antes de cualquier medida legislativa o administrativa que pueda afectarles.

---

---

Ahora responde a esta nueva pregunta con base en los siguientes extractos constitucionales:

{context}

PREGUNTA: {query}
"""

            response = model.generate_content(prompt)
            return response.text.strip(), relevant_docs

        # === INTERFAZ DE USUARIO ===
        selected_domain = st.selectbox("Selecciona el dominio legal:", [
            "Todos", "Derechos Fundamentales", "Derecho Laboral", "Derecho Ambiental",
            "Negocios y Econom√≠a", "Justicia y Proceso Legal", "Derechos Digitales y Privacidad", "Otro / No Clasificado"
        ])
        query = st.text_area("‚úçÔ∏è Escribe tu pregunta legal:")

        reading_level = st.selectbox("üó£Ô∏è Selecciona el nivel de comprensi√≥n lectora:", [
            "B√°sico (lenguaje sencillo)",
            "Intermedio (estilo ciudadano)",
            "Avanzado (t√©cnico jur√≠dico)"
        ])

        if st.button("Consultar") and query.strip():
            with st.spinner("Consultando la Constituci√≥n..."):
                answer, sources = ask_constitution(query, selected_domain, reading_level)
                st.markdown("### üßæ Respuesta:")
                st.write(answer)

                st.markdown("### üìö Art√≠culos utilizados (completos):")
                used_articles = set()
                for doc in sources:
                    article_id = doc.metadata.get('article_number')
                    if article_id and article_id not in used_articles:
                        used_articles.add(article_id)
                        article = next((a for a in full_articles if a['article_number'] == article_id), None)
                        if article:
                            st.markdown(f"**Art√≠culo {article['article_number']}** ({', '.join(article['domains'])})")
                            st.write(article['text'])
                        else:
                            st.markdown(f"‚ö†Ô∏è Art√≠culo {article_id} no encontrado en el JSON.")

        else:
            st.info("Escribe una pregunta legal y selecciona el dominio para comenzar.")

    except Exception as e:
        st.error(f"‚ùå Error al inicializar el modelo: {str(e)}")
else:
    st.warning("Por favor ingresa tu API key para comenzar.")

